name: Install Windows Store Python
description: Installs Python from the Windows Store

inputs:
  python-version:
    description: "Python version to install"
    default: "3.12"  # should default to the latest Python
    required: false

outputs:
  win-store-install-outcome:
    description: "Outcome of the Windows Store Python install"
    value: ${{ steps.install.outcome }}

runs:
  using: composite
  steps:

    - name: Python Definitions
      id: python
      shell: powershell
      run: |
        switch ( "${{ inputs.python-version }}" ) {
          "3.12" {
            $StoreURL = "https://apps.microsoft.com/store/detail/python-312/9NCVDN91XZQP"
            $ExeDir = Join-Path "$env:LOCALAPPDATA" "\Microsoft\WindowsApps\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0"
            $ScriptsDir = Join-Path "$env:LOCALAPPDATA" "\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\Scripts"
          }
          "3.11" {
            $StoreURL = "https://apps.microsoft.com/store/detail/python-311/9NRWMJP3717K"
            $ExeDir = Join-Path "$env:LOCALAPPDATA" "\Microsoft\WindowsApps\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0"
            $ScriptsDir = Join-Path "$env:LOCALAPPDATA" "\Packages\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\LocalCache\local-packages\Python311\Scripts"
          }
          "3.10" {
            $StoreURL = "https://apps.microsoft.com/store/detail/python-310/9PJPW5LDXLZ5"
            $ExeDir = Join-Path "$env:LOCALAPPDATA" "\Microsoft\WindowsApps\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0"
            $ScriptsDir = Join-Path "$env:LOCALAPPDATA" "Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\Scripts"
          }
          "3.9" {
            $StoreURL = "https://apps.microsoft.com/store/detail/python-39/9P7QFQMJRFP7"
            $ExeDir = Join-Path "$env:LOCALAPPDATA" "\Microsoft\WindowsApps\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0"
            $ScriptsDir = Join-Path "$env:LOCALAPPDATA" "Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\Scripts"
          }
          "3.8" {
            $StoreURL = "https://apps.microsoft.com/store/detail/python-38/9MSSZTT1N39L"
            $ExeDir = Join-Path "$env:LOCALAPPDATA" "\Microsoft\WindowsApps\PythonSoftwareFoundation.Python.3.8_qbz5n2kfra8p0"
            $ScriptsDir = Join-Path "$env:LOCALAPPDATA" "\Packages\PythonSoftwareFoundation.Python.3.8_qbz5n2kfra8p0\LocalCache\local-packages\Python38\Scripts"
          }
          default {
            echo " >>> Python ${{ inputs.python-version }} is not supported <<<"
            exit 1
          }
        }

        echo "version=${{ inputs.python-version }}" | Out-File -FilePath $Env:GITHUB_OUTPUT -Encoding utf8 -Append
        echo "store-url=$StoreURL" | Out-File -FilePath $Env:GITHUB_OUTPUT -Encoding utf8 -Append
        echo "exe-dir=$ExeDir" | Out-File -FilePath $Env:GITHUB_OUTPUT -Encoding utf8 -Append
        echo "scripts-dir=$ScriptsDir" | Out-File -FilePath $Env:GITHUB_OUTPUT -Encoding utf8 -Append
        echo "appx-path=$(Join-Path "$env:TEMP" python-${{ inputs.python-version }}.appx)" | Out-File -FilePath $Env:GITHUB_OUTPUT -Encoding utf8 -Append

        echo "current-year=$(Get-Date -UFormat "%Y")" | Out-File -FilePath $Env:GITHUB_OUTPUT -Encoding utf8 -Append
        echo "current-month=$(Get-Date -UFormat "%m")" | Out-File -FilePath $Env:GITHUB_OUTPUT -Encoding utf8 -Append

    - name: Cache Python AppxBundle
      uses: actions/cache@v3.2.3
      with:
        path: ${{ steps.python.outputs.appx-path }}
        key: python-${{ steps.python.outputs.version }}-appx-bundle-${{ steps.python.outputs.current-year }}-${{ steps.python.outputs.current-month }}

    - name: Install Windows Store Python ${{ steps.python.outputs.version }}
      id: install
      shell: powershell
      # Cloudflare started blocking access to the rg-adguard API...fallback to GitHub Python for now
      continue-on-error: true
      run: |
        if (-not (Test-Path -Path "${{ steps.python.outputs.appx-path }}" -PathType Leaf)) {
          # The Appx download URL must be resolved each time since the URL expires after a few hours
          echo "Downloading Python ${{ steps.python.outputs.version }}..."
          try {
            $WebResponse = Invoke-WebRequest -UseBasicParsing -Method 'POST' -Uri 'https://store.rg-adguard.net/api/GetFiles' -Body "type=url&url=${{ steps.python.outputs.store-url }}&ring=Retail" -ContentType 'application/x-www-form-urlencoded'
            $DownloadURL = ($WebResponse.Links | where {$_ -like '*.msix*'} | where {$_ -like '*_neutral_*' -or $_ -like "*_"+$env:PROCESSOR_ARCHITECTURE.Replace("AMD","X").Replace("IA","X")+"_*"} | Select-String -Pattern '(?<=a href=").+(?=" r)').matches.value

            echo "Appx download URL: $DownloadURL"
            if (($DownloadURL -eq $null) -or ((([uri]$DownloadURL).Host.split('.')[-2..-1] -join '.') -ne "microsoft.com")) {
              echo $WebResponse
              echo " >>> Download URL must resolve to microsoft.com. Aborting. <<< "
              exit 1
            }
            Invoke-WebRequest -Uri $DownloadURL -UseBasicParsing -OutFile ${{ steps.python.outputs.appx-path }}
          } catch {
            echo "::error::Downloading Windows Store Python failed; falling back to installing GitHub Python ($_)"
            throw $_.Exception
          }
        }

        echo "Installing Python ${{ steps.python.outputs.version }}..."
        Add-AppxPackage -Path ${{ steps.python.outputs.appx-path }}

        echo "Updating `$PATH..."
        echo "${{ steps.python.outputs.exe-dir }}" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
        echo "${{ steps.python.outputs.scripts-dir }}" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append

    - name: Python Install Fallback
      if: always() && steps.install.outcome == 'failure'
      uses: actions/setup-python@v4.7.1
      with:
       python-version: ${{ inputs.python-version }}
